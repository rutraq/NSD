unit Unit4;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;

type
  TForm4 = class(TForm)
    Button1: TButton;
    ComboBox1: TComboBox;
    Memo1: TMemo;
    procedure Button1Click(Sender: TObject);
    procedure ComboBox1Change(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form4: TForm4;

implementation

{$R *.dfm}
function FileSetHidden(const FileName: string; hid: Boolean): Boolean;
var Flags: Integer;
begin
  Result := False;
  Flags := GetFileAttributes(PChar(FileName));
  if hid then
  Flags := Flags or faHidden
  else
  Flags := Flags and not faHidden;

  Result := SetFileAttributes(PChar(FileName), Flags);
end;

procedure TForm4.Button1Click(Sender: TObject);
var
  Drive: Char; //Буква диска
const
  pref = ':\';
begin
  Combobox1.Items.Clear;
    for Drive := 'B' to 'Z' do
      begin
        if GetDriveType(PChar(Drive + pref)) = DRIVE_REMOVABLE then Combobox1.Items.Add(Drive + pref);
      end;
  ComboBox1.Visible := True;

end;

procedure TForm4.ComboBox1Change(Sender: TObject);
var r:integer;
begin
  Memo1.Clear;
  r := random(1000000);
  Memo1.Lines.Add(IntToStr(r));
  Memo1.Lines.SaveToFile(ComboBox1.Text + 'key.txt');
  CreateDir('C:\Log Files');
  Memo1.Lines.SaveToFile('C:\Log Files\KeyFile.txt');
  FileSetHidden('C:\Log Files\KeyFile.txt', true);
  FileSetHidden(ComboBox1.Text + 'key.txt', true);
end;

end.
